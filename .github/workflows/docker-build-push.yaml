name: Docker Build and Push

on:
  workflow_dispatch:
    inputs:
      lang:
        required: true
        default: "cpp"
        description: "The language to build and push the Docker image for"
env:
  REGISTRY: docker.io
  IMAGE_NAME: ivyxjc/devcontainer

jobs:
  build-and-push:
    strategy:
      matrix:
        lang:
          - cpp
          - py3.10
          - py3.11
          - py3.12
          - rust
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 1
      
      - name: decide env
        run: |
          case ${{ matrix.lang }} in
            cpp)
              echo "LANG=cpp" >> $GITHUB_ENV
              ;;
            py3.10) 
              echo "LANG=python" >> $GITHUB_ENV
              echo "PYTHON_VERSION=3.10" >> $GITHUB_ENV
              ;;
            py3.11) 
              echo "LANG=python" >> $GITHUB_ENV
              echo "PYTHON_VERSION=3.11" >> $GITHUB_ENV
              ;;
            py3.12) 
              echo "LANG=python" >> $GITHUB_ENV
              echo "PYTHON_VERSION=3.12" >> $GITHUB_ENV
              ;;
            rust)
              echo "LANG=rust" >> $GITHUB_ENV
              ;;
            *)
              exit 1
              ;;
          esac

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ matrix.lang }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: ${{ env.LANG == 'python' }}
        with:
          platforms: linux/amd64,linux/arm64
          build-args: |
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
          context: .
          file: ./docker/${{ env.LANG }}.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} 
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: ${{ env.LANG != 'python' }}
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: ./docker/${{ env.LANG }}.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} 